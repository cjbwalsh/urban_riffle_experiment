---
title: "Urban riffle experiment data compilation"
author: "Chris Walsh"
format: html
editor: visual
bibliography: references.bib
editor_options: 
  chunk_output_type: console
---

```{r}
## Need to have mdbtools installed on system for Hmisc::mdb.get()
source("https://tools.thewerg.unimelb.edu.au/documents/mwstr/mwstr_functions.R")
source("https://tools.thewerg.unimelb.edu.au/data/mwbugs/bugDatabaseFunctions.R")

taxon_all <- sqlQuery("SELECT * FROM taxon_all;", "mwbugs")
taxon_syn <- sqlQuery("SELECT * FROM taxon_syn;", "mwbugs")
taxon_rank1 <- sqlQuery("SELECT * FROM taxon_rank1;", "mwbugs")
taxon_fam <- sqlQuery("SELECT * FROM taxon_fam;", "mwbugs")
taxon_gen <- sqlQuery("SELECT * FROM taxon_gen;", "mwbugs")
taxon_spp <- sqlQuery("SELECT * FROM taxon_spp;", "mwbugs")
morphospp_etc <- sqlQuery("SELECT * FROM morphospp_etc;", "mwbugs")
metadata_db <- sqlQuery("SELECT * FROM metadata;", "mwbugs")

tipulid_syn <- readxl::read_excel("~/uomShare/wergProj/bugDatabase/data_as_supplied/Tipulidae_synonyms_Zac_Billingham.xlsx", sheet = "synonyms")
tipulid_species <- readxl::read_excel("~/uomShare/wergProj/bugDatabase/data_as_supplied/Tipulidae_synonyms_Zac_Billingham.xlsx", sheet = "species")
tipulid_genera <- readxl::read_excel("~/uomShare/wergProj/bugDatabase/data_as_supplied/Tipulidae_synonyms_Zac_Billingham.xlsx", sheet = "genera")

```

## Introduction

This is a record of the compilation of all data for the urban riffle experiment (referred to in my old files as HE).

Most of the original data was stored in the Microsoft Access database inverts.mdb. I copied that file into the directory \`\~/uomShare/wergStaff/ChrisW/git-data/urban_riffle_experiment/data_sources\`: yielding four tables.

```{r}
db <- Hmisc::mdb.get("~/uomShare/wergStaff/ChrisW/git-data/urban_riffle_experiment/data_sources/inverts.mdb")
# names(db) to get all table names (Note there are Hotham, BAUS, Yarra and other 
# tables in there...and there are other old mdb files in this directory that I haven't looked at...)
samples_mdb <- db$`HE sample list`
substrates_mdb <- db$`HE samples: substrates`
biota_mdb <- db$`HE data entry`
wq_mdb <- db$`HE Water Quality data`
#om_mdb <- db$`HE samples: org matter DWs`
# The following is a more complete set of OM data (updated Jan 2023)
om_mdb <- data.frame(readxl::read_excel("~/uomShare/wergStaff/ChrisW/git-data/urban_riffle_experiment/data_sources/HEOMDW.xlsx", sheet = "Final data"), stringsAsFactors = FALSE)
```

There was no reliable spatial data for the 9 sites, so I manually plotted the 9 points, snapping to the mwstr network [@kunapo_etal_2020]. Here I add additional information from the mwstr and mwbugs [@walsh_etal_2020] databases.

```{r}
#| echo: false
sites <- sf::st_read("~/uomShare/wergStaff/ChrisW/git-data/urban_riffle_experiment/data_sources/urban_riffle_experiment_sites.gpkg")
site_order <- c('BLI_2492g', 'DNG_7141a', 'BRS_1572d', 'OLN_5632h', 
                'FER_2210e', 'MNB_3032g', 
                'HVD_7836d', 'EUM_5211f', 'SCO_1555g')
sites$str_nm[match(site_order, sites$sitecode)] <-
  c("Blind Creek (Trib of Dandenong)","Dandenong Creek","Brushy Creek", "Olinda Creek",
    "Ferny Creek", "Monbulk Creek","Hallam Valley Main Drain","Eumemmerring Creek", 
    "Scotchmans Creek (Trib of Gardiners")
sites$location[match(site_order, sites$sitecode)] <-
  c("100 m downstream of Timothy Drive, Wantirna South",
    "100 m downstream of Juniper Road, Wantirna",
    "Imm. downstream of Brushy Creek Trail footbridge, Esther Park, Mooroolbark",
    "~50 m upstream of Coldstream West Road, Coldstream",
    "rear Knox Park (Rushdale St)- Knoxfield",
    "Behind Italian Club, Karoo Road, Rowville",
    "Off Hallam Valley Trail, just downstream of Kensington Court, Hampton Park",
    "50m upstream of railway line- Dandenong Sth",
    "150 m downstream Huntingdale Rd- Chadstone, just downstream of Gillon Ct")
load("~/uomShare/wergStaff/ChrisW/git-data/mwstr/mwstr_v12_corrections/imp_subcs.rda")
subcs <- sqlQuery(paste0("SELECT site, reach FROM subcs WHERE reach in ('",
                      paste(substr(sites$sitecode,1,
                                   nchar(sites$sitecode)-1), 
                            collapse = "','"),"');"), "mwstr")
sites$site <- subcs$site[match(substr(sites$sitecode,1,
                                      nchar(sites$sitecode) -1),
                               subcs$reach)]
sites$ai <- imp_subcs$c_ai[match(sites$site, imp_subcs$site)]
sites$mgae <- sf::st_coordinates(sites)[,1]
sites$mgan <- sf::st_coordinates(sites)[,2]

# Correct locations from table prepared during the study
old_sitetable <- as.data.frame(readxl::read_excel("~/uomShare/wergStaff/ChrisW/git-data/urban_riffle_experiment/site_information_additional.xlsx"), stringsAsFactors = FALSE)
elevs <- sqlQuery(paste0("SELECT reach, elev_m FROM sc_env WHERE reach IN ('",
         paste(substr(sites$sitecode,1,nchar(sites$sitecode)-1), collapse = "','"),
         "');"),"mwstr")
sites$elev_m <- round(elevs$elev_m[match(substr(sites$sitecode,1,nchar(sites$sitecode)-1),elevs$reach)])
careas<- sqlQuery(paste0("SELECT reach, carea_km2 FROM subcs WHERE reach IN ('",
         paste(substr(sites$sitecode,1,nchar(sites$sitecode)-1), collapse = "','"),
         "');"),"mwstr")
sites$carea_km2 <- round(careas$carea_km2[match(substr(sites$sitecode,1,nchar(sites$sitecode)-1),careas$reach)])
sites$floodplain_ht_m <- old_sitetable$`Floodplain height`[match(sites$he_sitecode,old_sitetable$he_sitecode)]
sites$baseflow_channel_width_m <- old_sitetable$`Baseflow channel width`[match(sites$he_sitecode,old_sitetable$he_sitecode)]
sites$reach_slope <- old_sitetable$`reach slope…`[match(sites$he_sitecode,old_sitetable$he_sitecode)]
sites$incip_diam_cm <- old_sitetable$`estimated tractive force (kg/m) = incipient diameter (cm)`[match(sites$he_sitecode,old_sitetable$he_sitecode)]

sites$floodplain_ht_m[sites$he_sitecode == "H"] <- "2.5±0.1"
sites$baseflow_channel_width_m[sites$he_sitecode == "H"] <- "2.0±0.9"
# HVD: from HALLAM1.XLS - see workings in cols I-L
sites$floodplain_ht_m[sites$he_sitecode == "H"] <- "2.3±0.3"
sites$baseflow_channel_width_m[sites$he_sitecode == "H"] <- "4.5±1.1"
# BLC: from BLIND.XLS - see workings in cols J-M
#### Can't find Eummemmering survey data.

# Make non-spatial for saving in excel
sf::st_geometry(sites) <- NULL

metadata1 <- data.frame(table_name = "sites", field = names(sites),
            definition = c(
              "sitecode using convention of mwbugs and mwstr databases",
              "sitecode used in urban riffle experiment data collection",
              "Experimental treatment (riffle or control)",
              "stream name as used by mwstr database (mwstr capitalises str_nms)",
              "Location for access",
              "site code from mwstr database",
      "Attenuated (effective) imperviousness Dec 2004, from mwstr database",
               "Easting: Map Grid of Australia 1994 Zone 55 (crs = 28355)",
               "Northing: Map Grid of Australia 1994 Zone 55 (crs = 28355)",
              "Elevation above sea level (m) from mwstr database",
               "Catchment area in sq. km from mwstr database",
               "Floodplain height (m) from pre-riffle survey (incomplete data)",
               "Baseflow channel width (m) from pre-riffle survey (incomplete data)",
               "Proportional reach slope from pre-riffle survey",
               "Estimated ractive force in kg/m, = incipient diameter (cm)"))
```

Prepare samples table.

```{r}
biota <- biota_mdb
# review past lumping decisions:
old_taxonomy <- db$`EPA Taxa list`
rounded_taxa <- old_taxonomy$Taxoncode[duplicated(old_taxonomy$Taxoncode)]
# # I went throught the 14 rounded taxa manually as follows
# i <- 1
# old_taxonomy[old_taxonomy$Taxoncode == rounded_taxa[i],]
# i <- i + 1
# subsequent correction
old_taxonomy$Taxoncode[old_taxonomy$lowesttaxon == "Pseudosmittia"] <- "QDAF3100"

samples <- samples_mdb[grepl("suction sampler", tolower(samples_mdb$Collection.method)) & 
                           substr(samples_mdb$Sample.code,1,1) %in% 1:6,]
# Error in date for trip 4 Monbulk samples Confirmed from lab sheets)
samples$Date[samples$HE.trip == "4" & samples$Site.code == "MCC"] <- 
  lubridate::date(samples$Date[samples$HE.trip == "4" & samples$Site.code == "MCC"]) + lubridate::years(1)
# sum(samples$Sample.code %in% unique(biota$Sample.code))
# sum(unique(biota$Sample.code) %in% samples$Sample.code)
# sum(!unique(biota$Sample.code) %in% samples$Sample.code) # 376 samples
samples <- samples[samples$Sample.code %in% unique(biota$Sample.code),]
# Having checked content of NA-dominated columns...
samples$sitec[samples$sitec == "B"] <- "Bl"
samples$sitec[samples$sitec == "b"] <- "Br"
samples <- data.frame(smpcode = NA, date = as.Date(samples$Date),
                      sitecode = sites$sitecode[match(samples$sitec,sites$he_sitecode)],
                      monthcode = calcMonthDate(as.Date(samples$Date)),
                      area_m2 = 0.04, 
                      replicate = as.numeric(substr(samples$Sample.code,
                            nchar(samples$Sample.code),nchar(samples$Sample.code))),
                      collection_method = "Boulton suction sampler, benthos, single sample",
                      processing_method = "lab-subsample to 300, ID to lowest taxon",
                      nsamples = NA, subsample_perc = samples$Subsample.size,
                      sourcecode = 63, 
                      comment = NA, embargoed = 0, 
                      old_sitecode = samples$Site.code,
                      old_samplecode = samples$Sample.code,
                      signal_wov2003 = NA, samppr = NA, signal2 = NA, n_ept_fam = NA) 
samples$replicate[samples$old_samplecode == "1EM5"] <- 2
samples$replicate[samples$old_samplecode == "5HM5"] <- 3
samples$replicate[samples$old_samplecode == "5OM5"] <- 1
samples$replicate[substr(samples$old_samplecode,nchar(samples$old_samplecode)-1,nchar(samples$old_samplecode)-1) == "L"] <- 
  samples$replicate[substr(samples$old_samplecode,nchar(samples$old_samplecode)-1,nchar(samples$old_samplecode)-1) == "L"] + 4
samples$replicate[substr(samples$old_samplecode,nchar(samples$old_samplecode)-1,nchar(samples$old_samplecode)-1) == "U"] <- 
  samples$replicate[substr(samples$old_samplecode,nchar(samples$old_samplecode)-1,nchar(samples$old_samplecode)-1) == "U"] + 8
samples$smpcode = paste(samples$monthcode, samples$sitecode, samples$replicate, 
                        "LH", sep = "-")
sample_groups <- unique(substr(samples$old_samplecode,1,nchar(samples$old_samplecode)-2))
for(i in 1:length(sample_groups)){
  samples$nsamples[substr(samples$old_samplecode,1,nchar(samples$old_samplecode)-2) == sample_groups[i]] <- sum(substr(samples$old_samplecode,1,nchar(samples$old_samplecode)-2) == sample_groups[i])
}

# note that the four sample subsample_percs that are not integer percentages
# samples[samples$subsample_perc %% 1 > 0,]
# are ok.  They were cases of one subsample taken in the 100-cell subsampler, 
# and the residue subsequentlyl spread across 100 cells and further subsampled.

# Add organic matter dry weights to samples table
samples$fpom_g <- samples$cpom_g <- samples$wood_g <- 
  samples$macrophyte_g <- samples$algae_g <- 0
om_types <- data.frame(type = c("FPOM", "CPOM","Wood","Macrophyte","Algae"),
            field = c("fpom_g", "cpom_g", "wood_g", "macrophyte_g", "algae_g"))
for(i in 1:nrow(om_mdb)){
  samples[samples$old_samplecode == om_mdb$Sample.code[i],
          om_types$field[om_types$type == om_mdb$OM.type[i]]] <- om_mdb$DW[i]
}
# Correction to a record, checked on paper records
samples$algae_g[samples$old_samplecode == "2HM3"] <- 0

```

Velocity/depth data

```{r}
depth_vel <- as.data.frame(readxl::read_excel("~/uomShare/wergStaff/ChrisW/git-data/urban_riffle_experiment/data_sources/HE all depth and velocity measurements.xls"))
# No depth, velocity data for Eummemmering Trip 4 (Missing field sheets)
depth_vel$Comments[1] <- NA
names(depth_vel) <- c("old_samplecode","depth_m","vel_counts_per_10s","comment","vel_m_s","trip","site","section")
depth_vel <- data.frame(smpcode =samples$smpcode[match(depth_vel$old_samplecode,samples$old_samplecode)],
                        depth_vel)
vel_m_s_char <- depth_vel$vel_m_s
# Assume NA velocities where note identifies macrophytes as being in the way = below detection
#   depth_vel$comment %in% c("P crispus in way","Potamogeton","Elodea")
# unique(gsub("<","",vel_m_s_char[is.na(depth_vel$vel_m_s)])) # all 0.0162, which is the detection limit.  The next smallest velocity is 0.0772. It makes the velocities in the log-domain a bit lumpy, but they are already lumpy at the high end. (see hist command below)
depth_vel$vel_m_s <- as.numeric(gsub("<","",vel_m_s_char))
depth_vel$vel_m_s[unique(gsub("<","",vel_m_s_char[is.na(depth_vel$vel_m_s)])) == "0.0162"]  <- 0.0162
# hist(log(depth_vel$vel_m_s))
mean_depth_vel <- aggregate(depth_vel[c("depth_m","vel_m_s")], 
                            by = list(old_samplecode = depth_vel$old_samplecode), FUN = mean, na.rm = TRUE)
var_depth_vel <- aggregate(depth_vel[c("depth_m","vel_m_s")], 
                            by = list(old_samplecode = depth_vel$old_samplecode), FUN = var, na.rm = TRUE)
# hist(log(var_depth_vel$depth_m + 5e-06))
# hist(log(var_depth_vel$vel_m_s))
# hist(log(mean_depth_vel$depth_m))
samples$depth_m_mean <- mean_depth_vel$depth_m[match(samples$old_samplecode,mean_depth_vel$old_samplecode)]
samples$depth_m_var <- var_depth_vel$depth_m[match(samples$old_samplecode,var_depth_vel$old_samplecode)]
samples$vel_m_s_mean <- mean_depth_vel$vel_m_s[match(samples$old_samplecode,mean_depth_vel$old_samplecode)]
samples$vel_m_s_var <- var_depth_vel$vel_m_s[match(samples$old_samplecode,var_depth_vel$old_samplecode)]

metadata2 <- data.frame(table_name = "depth_vel",
                        field = names(depth_vel),
                        definition = c("Sample code as in samples table",
                                       "old sample code as in samples table",
                                       "Depth (in m) of one of five points in sample area (four corners and centre point",
                                       "Velocity in counts per minute of flow meter at each of the 5 points",
                                       "Comment",
                                       "Velocity in m/s at each of the 5 points",
                                       "Sampling trip (1 of 6) in experiment", 
                                       "Site (Old sitecode)",
                                       "Section L, below the putatitive (or real) riffle, M in the riffle, or U upstream of the riffle"))
```

Substrate data

```{r}
# The following is adapted from data_sources/substrateEtcCompilation.Rmd on uomShare
substrate_data_xls <- "~/uomShare/wergStaff/ChrisW/git-data/urban_riffle_experiment/data_sources/VDSUBS.XLS"
substrates <- as.data.frame(readxl::read_excel(substrate_data_xls, sheet = 2), stringsAsFactors = FALSE)
names(substrates) <- c("old_samplecode","substrate_code","abundance_class","comment")
substrate_codes <- as.data.frame(readxl::read_excel(substrate_data_xls, sheet = 3), stringsAsFactors = FALSE)[,1:5]
names(substrate_codes) <- c("substrate_code","phi","substrate","erosion_vel_m_s","max_diam_mm")
abundance_classes <- as.data.frame(readxl::read_excel(substrate_data_xls, sheet = 4), stringsAsFactors = FALSE)
names(abundance_classes) <- c("abundance_class","percentage_range","min_percentage","max_percentage")

# what were called boulders in subst were really large cobbles
substrates$substrate_code[substrates$substrate_code == "b"] <- "lc"
# and lg (large gravel) should be cg (coarse gravel)
substrates$substrate_code[substrates$substrate_code == "lg"] <- "cg"


substrates_working <- substrates
substrates_working$phi <- substrate_codes$phi[match(substrates_working$substrate_code, substrate_codes$substrate_code)]
samp_subs <- aggregate(substrates_working$phi, 
                       by = list(old_samplecode = substrates_working$old_samplecode),
                       FUN = min)
names(samp_subs)[2] <- "min_phi"
temp <- aggregate(substrates_working$phi, 
                       by = list(old_samplecode = substrates_working$old_samplecode),
                       FUN = max)
samp_subs$max_phi <- temp$x[match(samp_subs$old_samplecode, temp$old_samplecode)]
samp_subs$med_phi <- NA

med_phi <- function(x)
{
x <- x[order(x$phi),]
x$max_percentage <- 
  abundance_classes$max_percentage[match(x$abundance_class, 
                                         abundance_classes$abundance_class)]
x$min_percentage <- 
  abundance_classes$min_percentage[match(x$abundance_class, 
                                         abundance_classes$abundance_class)]
x$mean_percentage <- apply(x[c("min_percentage","max_percentage")],1,FUN=mean)
cumulative_perc_cover <- cumsum(x$mean_percentage/sum(x$mean_percentage))
# finds phi value at 50% cover
x$phi[findInterval(0.5,cumulative_perc_cover)+1]
}
for(i in 1:nrow(samp_subs)){
  ssi <- substrates_working[substrates_working$old_samplecode == samp_subs$old_samplecode[i],]
  samp_subs$med_phi[i] <- med_phi(ssi)
}
samples$min_phi <- samp_subs$min_phi[match(samples$old_samplecode, samp_subs$old_samplecode)]
samples$max_phi <- samp_subs$max_phi[match(samples$old_samplecode, samp_subs$old_samplecode)]
samples$med_phi <- samp_subs$med_phi[match(samples$old_samplecode, samp_subs$old_samplecode)]

#Now subst only included an odd subset of samples: 
#  was able to find info on other samples in this file, but if I want the rest, I think I will need to go back to the original field notes. (For this additional data, I manually went through in the spreadsheet and extracted med, min and max Phi estimates)
substrate_data_xls_1 <- "~/uomShare/wergStaff/ChrisW/git-data/urban_riffle_experiment/data_sources/DVELTMP.XLS"
substrates_1 <- as.data.frame(readxl::read_excel(substrate_data_xls_1, sheet = 2), stringsAsFactors = FALSE)
substrates_1 <- substrates_1[substrates_1$Section == "M",]
substrates_1 <- data.frame(old_samplecode = substrates_1$`Sample code`,
                     min_phi = substrates_1$minPhi,
                     max_phi = substrates_1$maxPhi,
                     med_phi = substrates_1$medPhi,
                     trip = substrates_1$`HE trip`,
                     site = substrates_1$sitec,
                     section = substrates_1$Section)
substrates_1 <- substrates_1[!substrates_1$old_samplecode %in% samp_subs$old_samplecode,]
for(i in 1:nrow(substrates_1)){
  if(substrates_1$old_samplecode[i] %in% samples$old_samplecode){
  if(!is.na(samples$min_phi[samples$old_samplecode == substrates_1$old_samplecode[i]])){
    si <- which(samples$old_samplecode == substrates_1$old_samplecode[i])
    if(samples$min_phi[si] != substrates_1$min_phi[i] |
       samples$max_phi[si] != substrates_1$max_phi[i] |
       samples$med_phi[si] != substrates_1$med_phi[i])
    stop()
  }
  samples[samples$old_samplecode == substrates_1$old_samplecode[i],
          c("min_phi","max_phi","med_phi")] <- 
    substrates_1[i,c("min_phi","max_phi","med_phi")]
}
}
# 6 samples with substrate data that were not processed for macroinvertebrates.  
# The code above skips them, to make substrate data match biota data

# additions from field sheets
samples$min_phi[samples$old_samplecode == "1EM5"] <- 1
samples$med_phi[samples$old_samplecode == "1EM5"] <- 2
samples$max_phi[samples$old_samplecode == "1EM5"] <- 2
samples$min_phi[samples$old_samplecode == "1FM1"] <- -3
samples$med_phi[samples$old_samplecode == "1FM1"] <- -1
samples$max_phi[samples$old_samplecode == "1FM1"] <- 1
samples$min_phi[samples$old_samplecode == "1FM4"] <- -3
samples$med_phi[samples$old_samplecode == "1FM4"] <- -2
samples$max_phi[samples$old_samplecode == "1FM4"] <- 1
samples$min_phi[samples$old_samplecode == "1MM1"] <- -3
samples$med_phi[samples$old_samplecode == "1MM1"] <- -2
samples$max_phi[samples$old_samplecode == "1MM1"] <- -1
samples$min_phi[samples$old_samplecode == "1MM3"] <- -2
samples$med_phi[samples$old_samplecode == "1MM3"] <- 2
samples$max_phi[samples$old_samplecode == "1MM3"] <- 6
samples$min_phi[samples$old_samplecode %in% c("2FM2","2FM4")] <- -3
samples$med_phi[samples$old_samplecode %in% c("2FM2","2FM4")] <- -1
samples$max_phi[samples$old_samplecode %in% c("2FM2","2FM4")] <- 1
samples$min_phi[samples$old_samplecode == "2MM2"] <- 2
samples$med_phi[samples$old_samplecode == "2MM2"] <- 2
samples$max_phi[samples$old_samplecode == "2MM2"] <- 6
samples$min_phi[samples$old_samplecode == "2MM3"] <- 2
samples$med_phi[samples$old_samplecode == "2MM3"] <- 6
samples$max_phi[samples$old_samplecode == "2MM3"] <- 6

# and I recorded substrates for trips 5 and 6 in the following (except for 5M, and 5F, which I couldn't find)
subs_56 <- as.data.frame(readxl::read_excel("~/uomShare/wergStaff/ChrisW/git-data/urban_riffle_experiment/data_sources/substrates_trips56.xlsx"), stringsAsFactors = FALSE)
for(i in 1:nrow(subs_56)){
  samples$min_phi[samples$old_samplecode == subs_56$smpcode[i]] <- 
    substrate_codes$phi[substrate_codes$substrate_code == subs_56$min_code[i]]
}

#This exercise also made me dubious about macrophyte dw data...think about this...


metadata_substrate <- rbind(data.frame(table_name = "substrates", 
                                 field = names(substrates),
                                 definition = c("Sample code, matching old_samplecode in samples table",
                                                "Substrate code, links to table substrate_codes",
                                                "Categorical abundance, links to table abundance_classes",
                                                "Clarifying comment")),
                            data.frame(table_name = "substrate_codes", 
                                       field = names(substrate_codes),
                                       definition = 
                            c("Substrate code, links to table substrates",
                              "Phi (log2 smallest diameter) from Allan (1995) Stream Ecology Table 3.3",
                              "Substrate descriptor (l = large, m = medium, s = small, c = coarse, f = fine, vf = very fine)",
                              "Erosion velocity of largest particle in range (m/s?)",
                              "Maximum particle diameter (mm), adapted from Allan (1995 Table 3.3)")),
                            data.frame(table_name = "abundance_classes",
                                       field = names(abundance_classes),
                                       definition = c("Abundance class, links to table substrates",
                                    "Range of percentage cover for each abundance class (a text string)",
                                    "Minimum percentage cover in the range",
                                    "Maximum percentage cover in the range")))

# 1 error in substrate_codes
substrates$substrate_code[substrates$substrate_code == "lg"] <- "cg"
substrates$phi <- substrate_codes$phi[match(substrates$substrate_code, substrate_codes$substrate_code)]
```

Now to prepare other tables for consistency

```{r}
#| eval: true

biota$smpcode <- samples$smpcode[match(biota$Sample.code,samples$old_samplecode)]
# Some changes to ensure match with taxa list in the old database
db$`EPA Taxa list`$lowesttaxon <- trimws(db$`EPA Taxa list`$lowesttaxon, "both")
biota$lowesttaxon <- gsub("unident","Unident",biota$lowesttaxon)
biota$lowesttaxon[biota$lowesttaxon == "Megadrili"] <- "MEGADRILI"
biota$lowesttaxon[biota$lowesttaxon == "Necterosoma(Larva)"] <- 
  "Necterosoma sp.(Unident.)(Larva)"
biota$lowesttaxon[biota$lowesttaxon == "Necterosoma(Adult)"] <- 
  "Necterosoma sp.(Unident.)(Adult)"
biota$lowesttaxon[biota$lowesttaxon == "Austrolimnius(Larva)"] <- 
  "Austrolimnius sp.(Unident.)(Larva)"
biota$lowesttaxon[biota$lowesttaxon == "Austrolimnius(Adult)"] <- 
  "Austrolimnius sp.(Unident.)(Adult)"
biota$lowesttaxon[biota$lowesttaxon == "Rhantus(Larva)"] <- 
  "Rhantus sp.(Unident.)(Larva)"
biota$lowesttaxon[biota$lowesttaxon == "Rhaphium"] <- "Rhaphium sp.(Unident.)"
biota$taxoncode <- old_taxonomy$Taxoncode[match(biota$lowesttaxon,
                                                      old_taxonomy$lowesttaxon)]
# 3 remaining lowesttaxon names not in the original db taxon list. 
# Check the latest and amend as necessary
biota$taxoncode[biota$lowesttaxon == "Corduliidae (Unident.)"] <- "QO160000"
biota$taxoncode[biota$lowesttaxon == "Gastropoda (Unident.)"] <- "KG999999"
biota$taxoncode[biota$lowesttaxon == "Notriolus spp. ridged A9 (larva)"] <- "QC3403Z2"
biota$taxoncode[biota$lowesttaxon == "Paratanytarsus/Rheotanytarsus"] <- "QDAH9978"
biota$taxoncode[substr(biota$taxoncode,nchar(biota$taxoncode) - 1,
                       nchar(biota$taxoncode)) == "9I"] <- 
  gsub("9I","99",biota$taxoncode[substr(biota$taxoncode,nchar(biota$taxoncode) - 1,
                       nchar(biota$taxoncode)) == "9I"]) # make larvae codes same as adult codes

# Correct taxoncodes
biota$taxoncode[substr(biota$taxoncode,1,4) %in% c("MM59","MM51")]  <- "MM9999A1" # Oribatida, Galumnidae
biota$taxoncode[substr(biota$taxoncode,1,4) == "MM39"] <- "MM9999A2" # Mesostigmata
biota$taxoncode[substr(biota$taxoncode,1,4) %in% c("MM61","MM41")] <- "MM9999A3" # Trombidiidae, Bdellidae
biota$taxoncode[substr(biota$taxoncode,1,4) == "MM70"] <- "MM9999A7" # Astigmata
biota$taxoncode[biota$taxoncode == "LO0499C1"] <- "LO0499A1" # Tubificidae group A
biota$taxoncode[biota$taxoncode == "LO0499C2"] <- "LO0499A2" # Tubificidae group B
biota$taxoncode[substr(biota$taxoncode,1,2) == "OJ"] <- 
  paste0(substr(biota$taxoncode[substr(biota$taxoncode,1,2) == "OJ"],1,3),"00000") # superfluous zeros in copepod codes
biota$taxoncode[biota$taxoncode == "QDAH0676"] <- "QDAH9978" # Paratanytarsus/Rheotanytarsus
biota$taxoncode[biota$taxoncode == "LO0399E6"] <- "LO0399A5" # Phreodrilidae Gp. E (couplet 6)
biota$taxoncode[biota$taxoncode == "QC34039G"] <- "QC3403Z2" # Notriolus spp. ridged A9
biota$taxoncode[substr(biota$taxoncode,1,4) == "MMC9"] <- "MM9999A8" # Hydracarina
biota$taxoncode[substr(biota$taxoncode,1,6) == "QE0617"] <- "QE0699A2" # Leptophlebiidae Genus Z
biota$taxoncode[biota$taxoncode == "QE02A1M5"] <- "QE020602"  #Baetid genus 1 = Offadens
biota$taxoncode[biota$taxoncode == "QE02A2M6"] <- "QE020603"  #Baetid genus 2 = Offadens
biota$taxoncode[substr(biota$taxoncode,1,6) == "QD0901"] <- "QD090400"  #Two Bezzia morphospecies, with incorrect taxoncode in old_taxonomy
biota$taxoncode[biota$taxoncode %in% c("QD3599C1","QD3599C4")] <- "QD350000"  # Two Empididae morphospecies
biota$taxoncode[biota$taxoncode == "QC3402C1"] <- "QC3402B4"  #Simsonia sp.L42E
biota$taxoncode[biota$taxoncode == "QO180801"] <- "QO210801"  #Telephlebia brevicauda 
biota$taxoncode[biota$taxoncode == "QE02A2M1"] <- "QE0206Z3"  #Baetid genus 2 = Offadens
biota$taxoncode[substr(biota$taxoncode,1,4) == "QCZZ"] <- "QC999999"  #Coleoptera unident.QD45
biota$taxoncode[biota$taxoncode == "QT159998"] <- "QT150000"  #Only Conoesucidae taxon identified. Combine to family
biota$taxoncode[biota$taxoncode == "QD0903E1"] <- "QD090300"  #Round single species of Dasyhelea to genus
biota$taxoncode[substr(biota$taxoncode,1,6) == "QD0904"] <- "QD090400"  #Round single species of Bezzia to genus
biota$taxoncode[substr(biota$taxoncode,1,6) %in% 
                  c("IB0101","IH0101","KG0601","KG0708","KG0710","KP0301",
                    "LO0501","LO0502","LO0505","LO0506","LO0509","LO0510","LO0511",
                    "OP0601","OR1801","QC0920","QC0923","QC1303","QC3401","QC3402",
                    "QC3403","QC3404","QC3405","QC3701","QE0202","QE0601","QE0608",
                    "QE0609")] <- 
  paste0(substr(biota$taxoncode[substr(biota$taxoncode,1,6) %in% 
                  c("IB0101","IH0101","KG0601","KG0708","KG0710","KP0301",
                    "LO0501","LO0502","LO0505","LO0506","LO0509","LO0510","LO0511",
                    "OP0601","OR1801","QC0920","QC0923","QC1303","QC3401","QC3402",
                    "QC3403","QC3404","QC3405","QC3701","QE0202","QE0601","QE0608",
                    "QE0609")],1,6),"00")
#Hydra, Prostoma, Ferrissia, Bayardella, Leichhardtia, Pisidium, non-tubificid Naididae, ...,Sclerocyphon identified to genus
biota$taxoncode[substr(biota$taxoncode,1,2) %in% c("II","LA")] <- 
  paste0(substr(biota$taxoncode[substr(biota$taxoncode,1,2) %in% c("II","LA")],1,2),"000000")
#Nematoda, Aphanoneura, identified to class (omit anyway?)
biota$taxoncode[substr(biota$taxoncode,1,4) %in% 
                  c("KG05","LH01","LH05","LO08","LO11","OR25","OR26","QC05","QC36",
                    "QCAN","QD15","QD89","QE08","QH65","QH67","QL01","QO02","QO12","QO13","QO16")] <- 
  paste0(substr(biota$taxoncode[substr(biota$taxoncode,1,4) %in% 
                  c("KG05","LH01","LH05","LO08","LO11","OR25","OR26","QC05","QC36",
                    "QCAN","QD15","QD89","QE08","QH65","QH67","QL01","QO02","QO12","QO13","QO16")],1,4),"0000")
#Lymnaidae, Glossiphoniidae, Erpobdellidae, Enchytraeidae, Megadrili, Heteroceridae, Oniscidae, Carabidae, Styloniscidae, Circulionidae, Scatopsidae, Muscidae,Caenidae,Corixidae, Notonectidae, Crambidae, Coenagrionidae, Aeshnidae, Gomphidae, Corduliidae identified to family
biota$taxoncode[substr(biota$taxoncode,1,4) %in% c("QDAE","QDAF","QDAH","QDAI") & substr(biota$taxoncode,5,6) != "99"] <- 
    paste0(substr(biota$taxoncode[substr(biota$taxoncode,1,4) %in% c("QDAE","QDAF","QDAH","QDAI") & substr(biota$taxoncode,5,6) != "99"],1,6),"00")
# Chironomids to genus
biota$taxoncode[substr(biota$taxoncode,1,2) %in% c("QT") & substr(biota$taxoncode,5,6) != "99"] <- 
    paste0(substr(biota$taxoncode[substr(biota$taxoncode,1,2) %in% c("QT") & substr(biota$taxoncode,5,6) != "99"],1,6),"00")
# Trichopterans to genus (only species-level ID was Cheumatopsyche - all AV2, except 1 record of AV1)
# Psychodidae, Culicidae, Dolichopodidae, Stratiomyidae and Sciomyzidae identified to personal voucher morphospecies, since lost: combine to family
biota$taxoncode[substr(biota$taxoncode,1,4) %in% c("QD12","QD07","QD24","QD36","QD45")] <- 
  paste0(substr(biota$taxoncode[substr(biota$taxoncode,1,4) %in% c("QD12","QD07","QD24","QD36","QD45")],1,4), "0000")


# Update from synomym table
taxon_syn <- rbind(taxon_syn, as.data.frame(tipulid_syn))
codes_to_update <- unique(biota$taxoncode[biota$taxoncode %in% taxon_syn$old_taxoncode])
for(i in 1:length(codes_to_update)){
  if(length(unique(taxon_syn$taxoncode[taxon_syn$old_taxoncode == codes_to_update[i]])) > 1) stop()
  biota$taxoncode[biota$taxoncode == codes_to_update[i]] <- unique(taxon_syn$taxoncode[taxon_syn$old_taxoncode == codes_to_update[i]])
}

biota$shortcode <- biota$taxoncode
biota$shortcode[substr(biota$taxoncode,3,8) %in% c("000000","999999","999997","999998")] <- 
  substr(biota$taxoncode[substr(biota$taxoncode, 3, 8) %in% c("000000","999999","999997","999998")],1,2)
biota$shortcode[nchar(biota$shortcode) == 8 & 
                  substr(biota$taxoncode,5,8) %in% c("0000","9999","9998")] <- 
  substr(biota$taxoncode[nchar(biota$shortcode) == 8 & 
                  substr(biota$taxoncode, 5, 8) %in% c("0000","9999","9998")],1,4)
biota$shortcode[nchar(biota$shortcode) == 8 & 
                  substr(biota$taxoncode,7,8) %in% c("00","99")] <- 
  substr(biota$taxoncode[nchar(biota$shortcode) == 8 & 
                  substr(biota$taxoncode, 7, 8) %in% c("00","99")],1,6)

biota$shortcode[substr(biota$taxoncode,1,2) == "OJ"] <- 
  substr(biota$shortcode[substr(biota$taxoncode,1,2) == "OJ"],1,3) # superfluous zeros in copepod codes

# check <- unique(biota[c("taxoncode","shortcode")])

tipulid_genera <- data.frame(shortcode = tipulid_genera$shortcode,  taxon = tipulid_genera$Genus, table = "taxon_gen")
tipulid_species <- data.frame(shortcode = tipulid_species$taxoncode...4,  taxon = tipulid_species$Species, table = "taxon_spp")
taxon_all <- rbind(taxon_all,tipulid_genera, tipulid_species)
code_mismatches <- unique(biota$shortcode)[!unique(biota$shortcode) %in% c(taxon_all$shortcode,"QE020602","QE020603","QE0206Z3")]
# biota[biota$shortcode %in% code_mismatches,]

#Inspect crosstab in excel to make decisions about lumping and exclusion of ambiguous taxa
biota$s <- samples$subsample_perc[match(biota$smpcode,samples$smpcode)]*0.01
biota$naive <- biota$abundance/biota$s
biota_ct <- ct(biota$Sample.code, biota$shortcode, biota$naive)
biota_ct <- data.frame(sample = row.names(biota_ct),
                       site = samples$sitecode[match(row.names(biota_ct),
                                                     samples$old_samplecode)],
                       biota_ct)
taxa <- data.frame(taxoncode = names(biota_ct), 
                   taxon = taxon_all$taxon[match(names(biota_ct),taxon_all$shortcode)])
WriteXLS::WriteXLS(list(biota = biota_ct, taxa = taxa), "~/uomShare/wergStaff/ChrisW/git-data/urban_riffle_experiment/biota_third_check.xlsx")

# with biota looking right reformat for addition to mwbugs database
biota$notes <- paste(biota$notes, "[original ID: ",biota$lt.backup, "]")
biota$count <- biota$abundance
biota$taxon <- biota$lowesttaxon
biota$coarsepick <- 0 
# Having checked lab sheets, there were a few coarsepicks (and an annoying partial 30% subsample for oligochates in 1FL2. As L samples will not be used in the major analysis, I'll just leave those count estimates as they are [four values of 3.3].  In addition 1BrU4 was a complicated subsample [1 jar sampled 100%, 2nd jar 55% subsample.  I virtually subsampled the 1st jar to make the whole sample 55%] - just round the four fractional records 0.55 and 1.1 to make them 1 each)
biota$count[biota$count %in% c(0.55,1.1)] <- round(biota$count[biota$count %in% c(0.55,1.1)])
biota$coarsepick[biota$count %% 1 > 0 & biota$count < 3] <- 1
biota$originalbugcode <- NA
biota <- biota[c("smpcode","taxoncode","count","taxon","coarsepick","notes","originalbugcode","shortcode")]

taxon_tab <- codeTaxonomy(unique(biota$taxoncode))

metadata <- rbind(metadata1, metadata_db[metadata_db$table_name %in% c("samples","biota","taxon_all"),],
                  metadata2)
metadata <- rbind(metadata, data.frame(table_name = "samples",
                                      field = c(om_types$type,
                                                "depth_m_mean","depth_m_var",
                                                "vel_m_s_mean","vel_m_s_var",
                                                "min_phi","max_phi","med_phi"),
    definition = c("Dry weight of fine particulate organic matter collected in sample (g)",
                    "Dry weight of coarse particulate organic matter collected in sample (g)",
                    "Dry weight of wood collected in sample (g)",
                    "Dry weight of macrophyte leaves collected in sample (g)",
                    "Dry weight of algae collected in sample (g)",
                    "Mean water depth (m) of 5 points in sample unit (calculated from table depth_vel)",
                    "Variance of water depth (m) of 5 points in sample unit (calculated from table depth_vel)",
                    "Mean water velocity (m/s) of 5 points in sample unit (calculated from table depth_vel)",
                    "Variance water velocity (m/s) of 5 points in sample unit (calculated from table depth_vel)",
                    "minimum Phi of sediments in sample unit (calculated from tables substrates, substrate_codes, abundance_codes)","maximum Phi of sediments in sample unit (calculated from tables substrates, substrate_codes, abundance_codes)","median Phi of sediments in sample unit (calculated from tables substrates, substrate_codes, abundance_codes)")))

metadata <- metadata[order(metadata$table_name),]

# Save data in its original form before adjusting for the multi-taxon model.
WriteXLS::WriteXLS(list(sites = sites, samples = samples, biota = biota,
                        taxon_all = taxon_all, taxonomy = taxon_tab, 
                        depth_vel = depth_vel, substrates = substrates, 
                        substrate_codes = substrate_codes,  # key for substrates table
                        abundance_classes = abundance_classes, # key for substrates table
                        metadata = metadata),
   "~/uomShare/wergStaff/ChrisW/git-data/urban_riffle_experiment/urban_riffle_experiment_data.xlsx")

```

I aim to make adjustments for two analytical purposes. First, I need to identify ambiguous taxa at the lowest taxonomic level, which should be omitted from the multi-taxon analysis of the experiment. In making this decision, I need to consider:

-   the likely reliability of identifications to lower levels. e.g. would it be more parsimonious to combine morphospecies to the genus level? In such cases, I would retain the identified taxon name, but assign them all a genus level taxon code (ending in 0000 to identify genus as the designated level of identification for that taxon).

-   Should clearly ambiguous taxa be omitted, or should their counts be distributed across identified taxa in the study? This should only be done where there are a large number of ambiguous taxa and the relative abundances of identified species are clear. Any such adjustments should be made at the analysis stage rather than at this data compilation stage.

Second, I need to retain all ambiguous records (flagging them as ambiguous by trailing 9s and by a U in the notes column). Note that I will leave trailing 9s on taxa that should be excluded from analysis (e.g. taxa too small to be reliably collected in 250 um mesh, such as nematodes and microcrustacea, or semi-aquatic taxa such as Collembola, Carabidae).

```{r}
#First aggregate to achieve unique shortcode-smpcode combinations
biota <- aggregate(biota["count"], 
                         by = list(smpcode = biota$smpcode, 
                                   coarsepick = biota$coarsepick,
                                   taxoncode = biota$taxoncode,
                                   shortcode = biota$shortcode), FUN = sum)
# And retrieve standard name for taxon from taxon_all table
biota$taxon <- biota$taxon[match(biota$shortcode, taxon_all$shortcode)]
biota$s <- samples$subsample_perc[match(biota$smpcode,samples$smpcode)]/100
biota$count[biota$coarsepick == 1] <- biota$count[biota$coarsepick == 1]/biota$s[biota$coarsepick == 1]
biota$s[biota$coarsepick == 1] <- 1
biota$naive <- biota$count/biota$s

# Adjustments for multi-taxon model
# Gastropoda (Unident.) -seems to be solely a trip 5/6 phenomenon. No explanatory notes on any records. 
# 5BlM2 47 unidentified gastropods - no Physa identified. In the other reps from this sample, Physa was the dominant gastropod.  Change these 47 to Physa.
# Given the bias of this id to the last two trips, 5BrM4, 5DM3, 6DM1, 5EM2, 5HM1, 5MM1, 6OM1, 5SM1: distribute pro-rata unidentified gastropods among the larger numbers of Physa and Potamopyrgus that have been identified???
gast_unid <- which(biota$taxoncode == "KG999999")
for(i in gast_unid){
  sampi <- biota$smpcode[i]
  biotai <- biota[substr(biota$shortcode,1,4) %in% c("KG05","KG08","KG02") & biota$smpcode == sampi,]
  biota$count[substr(biota$shortcode,1,4) %in% c("KG05","KG08","KG02") & biota$smpcode == sampi] <- round(biotai$count * biota$count[i]/sum(biotai$count)) + biota$count[substr(biota$shortcode,1,4) %in% c("KG05","KG08","KG02") & biota$smpcode == sampi]
}
biota <- biota[biota$taxoncode != "KG999999",]

# Elmidae (Unident.) - constituting in all cases <~50% of Elmids in each sample - mainly in Monbulk Creek samples.  Distribute as per Gastropods
qc34_unid <- which(biota$taxoncode == "QC349999")
for(i in qc34_unid){
  sampi <- biota$smpcode[i]
  biotai <- biota[substr(biota$shortcode,1,6) %in% paste0("QC340",1:5) & biota$smpcode == sampi,]
  biota$count[substr(biota$shortcode,1,6) %in% paste0("QC340",1:5) & biota$smpcode == sampi] <- round(biotai$count * biota$count[i]/sum(biotai$count)) + biota$count[substr(biota$shortcode,1,6) %in% paste0("QC340",1:5) & biota$smpcode == sampi]
}
biota <- biota[biota$taxoncode != "QC349999",]

# Tanypodinae (Unident.) - constituting in all but one cases <~50% of Tanypods in each sample (one early instar record in 2EM3 the only Tanypod in the sample (most likely Procladius that occurs in two of the other samples).  Distribute as per Gastropods, and set 2EM3 tanypod as Procladius
qdae_unid <- which(biota$taxoncode == "QDAE9999")
for(i in qdae_unid){
  sampi <- biota$smpcode[i]
  biotai <- biota[substr(biota$shortcode,1,4) =="QDAE" & biota$shortcode != "QDAE" & biota$smpcode == sampi,]
  if(nrow(biotai) > 0){
    biota$count[substr(biota$shortcode,1,4) =="QDAE" & biota$shortcode != "QDAE" & biota$smpcode == sampi] <- round(biotai$count * biota$count[i]/sum(biotai$count)) + 
    biota$count[substr(biota$shortcode,1,4) =="QDAE" & biota$shortcode != "QDAE" &  biota$smpcode == sampi]
  }
}
biota$shortcode[biota$taxoncode == "QDAE9999" & biota$smpcode == "73-EUM_5211f-3-LH"] <- "QD08"
biota$taxoncode[biota$taxoncode == "QDAE9999" & biota$smpcode == "73-EUM_5211f-3-LH"] <- "QD080000"
biota <- biota[biota$taxoncode != "QDAE9999",]

# Simuliidae (Unident) QD109999: two species of Simulid identified, rarely occuring together. 
# 5 records (of multiple specimens, two where unident greatly outnumbers identified specimens) of Simulidae (Unident).  Combine.
biota$shortcode[substr(biota$taxoncode,1,4) == "QD10"] <- "QD10"
biota$taxoncode[substr(biota$taxoncode,1,4) == "QD10"] <- "QD100000"

# Ceratopogonidae 13 records of 4 species/genera (two morphospecies); 3 records of unidentified pogs
# Combine under similar logic to simulids
biota$shortcode[substr(biota$taxoncode,1,4) == "QD09"] <- "QD09"
biota$taxoncode[substr(biota$taxoncode,1,4) == "QD09"] <- "QD090000"

# Empididae Three morphospecies distinguished. Combine as above.
biota$shortcode[substr(biota$taxoncode,1,4) == "QD35"] <- "QD35"
biota$taxoncode[substr(biota$taxoncode,1,4) == "QD35"] <- "QD350000"

# Hirudinea (Unident.) LH999999. Only one record. Explanatory note identifies it as a new species of uncertain family. (couldn't find voucher specimen Dec 2022) Delete.
biota <- biota[biota$taxoncode != "LH999999",]
# Naididae (Unident.) LO059999. Only 3 records. No explanatory notes.  Delete.
biota <- biota[biota$taxoncode != "LO059999",]
# Oligochaeta (Unident.) LO059999. Only 2 records in M samples. Notes all say 'no setae'. All in Monbulk Creek, where identified oligochaets outnumber them. Delete.
biota <- biota[biota$taxoncode != "LO999999",]
# Hydracarina (Unident.) MMC99999 is a valid taxon (Mostly Caenobates), and separate from the other mite groups that have been identified. Leave.
# Microcrustacea. OG, OH and OJ, Normally, I delete these taxa (and Nematoda, II), on the basis of them mostly being smaller than the 250 micron mesh used.  Quite a lot of cyclopoid copepods recorded though, and most of these were large.  Keep Cyclopoids, delete the rest
biota <- biota[!substr(biota$taxoncode,1,2) %in% c("OG","OH"),]
biota <- biota[!substr(biota$taxoncode,1,3) %in% c("OJ1","OJ6"),]
# Collembola - semi-aquatic. Only one record  Delete
biota <- biota[biota$taxoncode != "QA999999",]
# Curculionidae - semi-aquatic at best. Only two records. Delete
biota <- biota[biota$taxoncode != "QCAN0000",]
#Coleoptera (Unident.) - one specimen 2BrM3, note says lost prior to id (there are other coleoptera in the sample). Delete
biota <- biota[biota$taxoncode != "QC999999",]

# Orthocladiinae (Unident.)  all a small proportion of identified Orthoclads = all 1-3 records. Delete.
biota <- biota[biota$taxoncode != "QDAF9999",]
# Chironomini QDAI, a small proportion of identified chironomini in all cases. Delete
biota <- biota[biota$taxoncode != "QDAI9999",]
# Chironomidae QDAZ, a small proportion of identified chironomids in all cases. Delete
biota <- biota[biota$taxoncode != "QDAZ9998",]
# Baetidae QE02 3 single records. 2 in non-middle samples, but one in 134-OLN_5632h-1-LH , with no other QE02 records at that site on that occasion. Reluctantly delete.  (But perhaps a family-level analysis might be worth considering to pick up such cases?)
biota <- biota[biota$taxoncode != "QE029999",]
# Leptophlebiidae QE06 4 records, all in MNB.  Similar story to QE02. Delete.
biota <- biota[biota$taxoncode != "QE069999",]
# Odonata QO 10 records with little pattern - many only QO record in sample.  Delete reluctantly
biota <- biota[biota$shortcode != "QO",]
# QP Only 4 records of Plecoptera in total - 2 species, and 1 unidentified. Combine
biota$shortcode[substr(biota$taxoncode,1,2) == "QP"] <- "QP"
biota$taxoncode[substr(biota$taxoncode,1,2) == "QP"] <- "QP"
# QT 2 records (one is the single QT record from SCO post riffle), delete
biota <- biota[biota$shortcode != "QT",]
# QT01 only one record, in a sample that also contained Taschorema. Delete
biota <- biota[biota$shortcode != "QT01",]
# QT03 2 species (Hellyethira and Hydroptila), four additional unidentified records....Combine
biota$shortcode[substr(biota$taxoncode,1,4) == "QT03"] <- "QT03"
biota$taxoncode[substr(biota$taxoncode,1,4) == "QT03"] <- "QT03"
# QT06 2 species (Asmicridea and Cheumatopsyche), 6 additional unidentified records....Combine
biota$shortcode[substr(biota$taxoncode,1,4) == "QT06"] <- "QT06"
biota$taxoncode[substr(biota$taxoncode,1,4) == "QT06"] <- "QT06"
# QT25 3 species, 4 additional unidentified (including a single post-riffle record in SCO)...Combine
### Perhaps reconsider these last three combinations after initial analysis
biota$shortcode[substr(biota$taxoncode,1,4) == "QT25"] <- "QT25"
biota$taxoncode[substr(biota$taxoncode,1,4) == "QT25"] <- "QT25"

# biota$count[2842] %% 1 inexplicably = 1 (for all other counts it = 0). Fix by...
biota$count <- as.integer(biota$count)

biota$taxon <- taxon_all$taxon[match(biota$shortcode, taxon_all$shortcode)]
biota <- biota[names(biota) != "naive"]

biota_ct <- ct(biota$smpcode, biota$shortcode, biota$count/biota$s)
biota_ct <- data.frame(sample = row.names(biota_ct),
                       site = samples$sitecode[match(row.names(biota_ct),
                                                     samples$smpcode)],
                       biota_ct)
taxa <- data.frame(taxoncode = names(biota_ct), 
                   taxon = taxon_all$taxon[match(names(biota_ct),taxon_all$shortcode)])
taxa$taxon[taxa$taxoncode == "QD08"] <- "Pediciidae"

higher_taxa <- read.csv("~/uomShare/wergStaff/ChrisW/git-data/urban_riffle_experiment/higher_taxon_codes.csv")
higher_taxa <- higher_taxa[!higher_taxa$higher_taxon %in% c("I","J","K"),]
higher_taxa <- rbind(higher_taxa, data.frame(shortcode = c("IB","II","IH"), 
                                             taxon = c("Cnidaria","Nematoda","Nemertea"),
                                             higher_taxon = c("I","J","K")))
taxa$higher_taxon <- higher_taxa$higher_taxon[match(substr(taxa$taxoncode,1,2),higher_taxa$shortcode)]
taxa$higher_taxon[substr(taxa$taxoncode,1,1) == "L"] <- "A"
taxa$higher_taxon[substr(taxa$taxoncode,1,1) == "O"] <- "Z"

taxa$italic <- 0
taxa$italic[taxa$taxon %in% 
              taxon_all$taxon[taxon_all$table %in% c("taxon_spp", "taxon_gen")]] <- 1
taxa$italic[taxa$taxon == "Paratanytarsus/Rheotanytarsus"] <- 1
# taxonomic revision 
taxa$taxon <- gsub("Tubificid","Tubificin",taxa$taxon)
taxa <- taxa[-(1:2),]
taxa$taxon[taxa$taxon == "'MO5'"] <- "Echinocladius"
taxa$taxon[taxa$taxon == "Antiporus EPA sp.L1"] <- "Antiporus"
taxa$taxon[taxa$taxon == "Talitridae EPA sp.L1"] <- "Talitridae"

subcs <- sqlQuery(paste0("SELECT site, reach FROM subcs WHERE reach IN ('",
                         paste(substr(sites$sitecode,1,nchar(sites$sitecode) -1),
                               collapse = "', '"), "');"), "mwstr")

metadata <- rbind(metadata, 
                  data.frame(table_name = "taxa",field = names(taxa),
                             definition = c("taxon code (=shortcode, links to tables taxon_all, biota and biota_ct)", "Full taxon name", "higher taxon code (links to table higher_taxa", "binary flag identifying species and generic names that require italicization")),
                  data.frame(table_name = "higher_taxa", field = names(higher_taxa),
                             definition = c("1- or 2-character high-level taxon code",
                                            "high-level taxonomic group", "single-character code")))

WriteXLS::WriteXLS(list(sites = sites, samples = samples, biota = biota, taxon_all = taxon_all, taxa = taxa, higher_taxa = higher_taxa, metadata = metadata),
                   "~/uomShare/wergStaff/ChrisW/git-data/urban_riffle_experiment/data_for_model.xlsx")

# Used in calculating assemblage stats
biotic_indices<- sqlQuery("SELECT * FROM biotic_indices;", "mwbugs")
write.csv(biotic_indices, "~/uomShare/wergStaff/ChrisW/git-data/urban_riffle_experiment/biotic_indices.csv",
          row.names = FALSE)
```
